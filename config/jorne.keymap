/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        hold_tap_f_ctrl: hold_tap_f_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "F as Ctrl";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp F>, <&kp LCTRL>;
        };
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BSPC | RSE |

            bindings = <
&bt BT_CLR_ALL  &kp GRAVE         &kp Q  &kp W           &kp E           &kp R                &kp T                   &kp Y             &kp U        &kp I           &kp O           &kp P         &kp LBKT       &kp LEFT_WIN
                &kp TAB           &kp A  &mt LEFT_WIN S  &mt LEFT_ALT D  &&hold_tap_f_ctrl    &mt LS(LEFT_SHIFT) G    &mt LEFT_SHIFT H  &mt LCTRL J  &mt LEFT_ALT K  &mt LEFT_WIN L  &kp SEMI      &mt RCTRL SQT
                &kp LS(LEFT_ALT)  &kp Z  &kp X           &kp C           &kp V                &kp B                   &kp N             &kp M        &kp COMMA       &kp DOT         &kp KP_COMMA  &kp KP_DOT
                                                         &kp ESCAPE      &mo 1                &kp SPACE               &kp ENTER         &mo 1        &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp HOME  &kp LC(LEFT)      &kp UP_ARROW    &kp LC(RIGHT)      &kp PAGE_UP      &kp PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MULTIPLY    &trans  &trans
        &trans  &kp END   &kp LEFT          &kp DOWN_ARROW  &kp RIGHT          &kp PAGE_DOWN    &kp KP_MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LS(KP_DIVIDE)  &trans
        &trans  &trans    &kp LS(LC(LEFT))  &trans          &kp LS(LC(RIGHT))  &kp INSERT       &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_EQUAL       &trans
                                            &trans          &trans             &trans           &trans        &mo 3         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp F12          &kp F1            &kp F2            &kp F3            &kp F4      &kp F5        &kp F6            &kp F7            &kp F8             &kp F9          &kp F10          &kp F11          &trans
        &mt LCTRL EQUAL  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(N4)  &kp LS(N5)    &kp LS(NUMBER_6)  &kp LS(N7)        &kp LS(N8)         &kp LS(N9)      &kp LS(N0)       &mt RCTRL K_APP
        &trans           &trans            &trans            &trans            &trans      &kp COLON     &kp SEMICOLON     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp UNDERSCORE
                                                             &trans            &mo 3       &trans        &trans            &trans            &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
